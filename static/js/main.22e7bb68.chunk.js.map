{"version":3,"sources":["serviceWorker.ts","Model/Viewport.ts","Model/Position.ts","View/MapPage/StationInfo.tsx","View/MapPage/Map.tsx","Model/MapPin.ts","Model/ObservationStation.ts","Model/Observation.ts","Model/Feature.ts","Model/Color.ts","Model/Scale.ts","Controller/MapController.ts","View/MapPage/FeatureSelect.tsx","View/MapPage/Search.tsx","View/MapPage/Legend.tsx","View/MapPage/MapPage.tsx","View/ErrorPage.tsx","View/DetailPage.tsx","View/AboutPage.tsx","View/PrivacyPolicyPage.tsx","Controller/Storage/Language.ts","View/LayoutComponents/LanguageMenu.tsx","View/LayoutComponents/PageMenu.tsx","View/Layout.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Viewport","center","zoom","this","Error","position","Position","latitude","longitude","lat","lng","StationInfo","props","href","lastObservation","getObservationStation","getId","station","Container","Typography","variant","color","getName","getPosition","getString","Grid","container","direction","spacing","item","xs","getFeature","display","getValue","getUnitOfMeasurement","Button","onClick","openDetails","React","Component","require","Map","nextViewport","lock","state","pin","L","IconMaterial","icon","iconColor","markerColor","getColor","getHex","outlineColor","outlineWidth","viewport","setTimeout","updateViewport","onViewportChange","viewportLeafletToModel","console","log","setState","getCoordinates","v","TileLayer","attribution","url","pins","map","Marker","getIconFromMapPin","Popup","onOpen","handlePopup","MapPin","id","value","ObservationStation","name","description","availableFeatures","feature","found","length","counter","Observation","observationStation","timestamp","Feature","nameId","descriptionId","scale","relatedWeblinkId","limit","unitOfMeasurement","drawableDiagramIds","Array","observation","Color","r","g","b","TypeError","Math","floor","toHex","n","hex","toString","toUpperCase","exec","parseInt","Scale","linearTransition","colors","dict","sortOnKeys","keys","Object","getColorFromHex","index","getLinearTransition","numKeys","i","push","sort","tempDict","lowerIndex","a","colorA","getRGB","colorB","resR","interpolate","resG","resB","add","MapController","selectedFeature","Date","now","random","FeatureSelect","open","Avatar","className","classes","root","avatarClick","Card","CardContent","withStyles","theme","backgroundColor","palette","primary","main","contrastText","geonames","Geonames","username","lan","encoding","Search","searchTerm","locationEnabled","navigator","permissions","query","then","status","search","q","resp","firstResult","onSearch","catch","err","error","geolocation","getCurrentPosition","res","coords","Paper","TextField","type","input","label","onKeyPress","e","key","onChange","target","IconButton","iconButton","Divider","orientation","divider","locationClick","disabled","padding","alignItems","width","marginLeft","flex","height","margin","useStyles","makeStyles","createStyles","box","getStyleFromScale","min","max","grad","background","slice","Legend","Box","border","style","MapPage","mapController","selectedStation","getPins","polygons","getPolygons","handleViewportChange","selectObservation","pos","onStationSelected","0","5","10","ErrorPage","code","message","DetailPage","observationStationId","params","observationStationExists","errorMessage","AboutPage","PrivacyPolicyPage","Language","selectedLangId","languages","selectedLang","languageData","find","strings","stringId","undefined","text","languageID","langs","forEach","element","set","languageInstance","LanguageMenu","availableLanguages","ref","language","getInstance","getSelectedLanguage","anchorEl","handleClick","bind","handleClose","getAvailabeleLanguages","lang","event","currentTarget","changeLanguage","list","MenuItem","handleMenuItemClick","selected","startIcon","Translate","endIcon","ExpandMore","aria-controls","aria-haspopup","langList","PageMenu","toogleDrawer","toogle","AppBar","Toolbar","component","Link","to","textDecoration","float","Drawer","anchor","onClose","List","ListItem","button","ListItemIcon","ListItemText","getText","Layout","exact","path","createMuiTheme","green","secondary","purple","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22e7bb68.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { Position } from \"../Model/Position\";\r\n\r\nexport class Viewport {\r\n  private center: Position;\r\n  private zoom: number;\r\n\r\n  constructor(center: Position, zoom: number) {\r\n    this.center = center;\r\n    this.zoom = zoom;\r\n    if (this.zoom < 0) {\r\n      this.zoom = 0;\r\n    }\r\n  }\r\n\r\n  getCenter(): Position {\r\n    return this.center;\r\n  }\r\n\r\n  getZoom(): number {\r\n    return this.zoom;\r\n  }\r\n\r\n  getRadius(): number {\r\n    throw new Error(\"Not implemented\");\r\n  }\r\n\r\n  setCenter(position: Position) {\r\n    this.center = position;\r\n  }\r\n\r\n  setZoom(zoom: number) {\r\n    this.zoom = zoom;\r\n    if (this.zoom < 0) {\r\n      this.zoom = 0;\r\n    }\r\n  }\r\n}\r\n","export class Position {\r\n  private latitude: number;\r\n\r\n  private longitude: number;\r\n\r\n  constructor(latitude: number, longitude: number) {\r\n    this.latitude = latitude;\r\n    this.longitude = longitude;\r\n  }\r\n\r\n  getCoordinates(): { lat: number; lng: number } {\r\n    var lat = this.latitude;\r\n    var lng = this.longitude;\r\n    return { lat, lng };\r\n  }\r\n\r\n  getLatitude(): number {\r\n    return this.latitude;\r\n  }\r\n\r\n  getLongitude(): number {\r\n    return this.longitude;\r\n  }\r\n\r\n  getString(): string {\r\n    return this.latitude + \" °N \" + this.longitude + \" °O\";\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ObservationStation } from \"../../Model/ObservationStation\";\r\nimport { Observation } from \"../../Model/Observation\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport Language from \"../../Controller/Storage/Language\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\ninterface State {}\r\ninterface Props {\r\n  lastObservation: Observation;\r\n}\r\n\r\nexport class StationInfo extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n  }\r\n\r\n  openDetails() {\r\n    //TODO: Remove hardcoded value\r\n    window.location.href =\r\n      \"/details?id=\" +\r\n      this.props.lastObservation.getObservationStation().getId();\r\n  }\r\n\r\n  render() {\r\n    var station = this.props.lastObservation.getObservationStation();\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h4\" color=\"secondary\">\r\n          {station.getName()}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n          {station.getPosition().getString()}\r\n        </Typography>\r\n        <Typography variant=\"h6\">\r\n          <Grid container direction=\"row\" spacing={2}>\r\n            <Grid item xs>\r\n              {this.props.lastObservation.getFeature().getName() + \":\"}\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"h6\" display=\"inline\" color=\"primary\">\r\n                {this.props.lastObservation.getValue()}{\" \"}\r\n                {this.props.lastObservation.getFeature().getUnitOfMeasurement()}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n        <Button\r\n          onClick={() => this.openDetails()}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          {\"Weitere Informationen\"}\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Viewport } from \"../../Model/Viewport\";\r\nimport { MapPin } from \"../../Model/MapPin\";\r\nimport { Polygon } from \"../../Model/Polygon\";\r\n\r\nimport {\r\n  Map as LeafletMap,\r\n  TileLayer,\r\n  Marker,\r\n  Polygon as LeafletPolygon,\r\n  Viewport as LeafletViewport,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport { Position } from \"../../Model/Position\";\r\nimport { StationInfo } from \"./StationInfo\";\r\nimport { Observation } from \"../../Model/Observation\";\r\nrequire(\"leaflet-iconmaterial\");\r\ninterface State {\r\n  center: Position;\r\n  zoom: number;\r\n}\r\n\r\ninterface Props {\r\n  onViewportChange: (viewport: Viewport) => void;\r\n  handlePopup: (pin: MapPin) => void;\r\n  pins: MapPin[];\r\n  polygons: Polygon[];\r\n  lastObservation: Observation | null;\r\n}\r\n\r\nexport class Map extends React.Component<Props, State> {\r\n  nextViewport: LeafletViewport | null;\r\n  lock: boolean;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.lock = false;\r\n    this.nextViewport = null;\r\n    this.state = {\r\n      center: new Position(49, 8.4),\r\n      zoom: 8,\r\n    };\r\n  }\r\n\r\n  private getIconFromMapPin(pin: MapPin): L.Icon {\r\n    // Custom icons with colors\r\n    //TODO: Add warning if limit is reached?\r\n    // @ts-ignore\r\n    var busIcon = L.IconMaterial.icon({\r\n      icon: \"\", // Name of Material icon\r\n      iconColor: \"\", // Material icon color (could be rgba, hex, html name...)\r\n      markerColor: pin.getColor().getHex(), // Marker fill color\r\n      outlineColor: \"black\", // Marker outline color\r\n      outlineWidth: 1, // Marker outline width\r\n    });\r\n    return busIcon;\r\n  }\r\n\r\n  private onViewportChange(viewport: LeafletViewport) {\r\n    this.nextViewport = viewport;\r\n    if (!this.lock) {\r\n      this.lock = true;\r\n      setTimeout(\r\n        () => this.updateViewport(this.nextViewport as LeafletViewport),\r\n        250\r\n      );\r\n    }\r\n  }\r\n\r\n  private updateViewport(viewport: LeafletViewport) {\r\n    this.props.onViewportChange(this.viewportLeafletToModel(viewport));\r\n    console.log(viewport);\r\n    this.setState({ zoom: this.state.zoom });\r\n    this.lock = false;\r\n  }\r\n\r\n  private viewportLeafletToModel(viewport: LeafletViewport): Viewport {\r\n    return new Viewport(\r\n      new Position(viewport.center?.[0] ?? 0, viewport.center?.[1] ?? 0),\r\n      viewport.zoom ?? 0\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeafletMap\r\n          center={this.state.center.getCoordinates()}\r\n          zoom={this.state.zoom}\r\n          onViewportChange={(v) => this.onViewportChange(v)}\r\n        >\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.props.pins.map((pin) => (\r\n            <Marker\r\n              position={pin.getPosition().getCoordinates()}\r\n              icon={this.getIconFromMapPin(pin)}\r\n            >\r\n              <Popup onOpen={() => this.props.handlePopup(pin)}>\r\n                {this.props.lastObservation ? (\r\n                  <StationInfo lastObservation={this.props.lastObservation} />\r\n                ) : (\r\n                  <p>No station selected</p>\r\n                )}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n          {/*\r\n          {this.props.polygons.map((polygon) => (\r\n            <LeafletPolygon positions={polygon}/>\r\n          ))}\r\n          */}\r\n        </LeafletMap>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Color } from \"./Color\";\r\nimport { Position } from \"./Position\";\r\n\r\nexport class MapPin {\r\n  private id: string;\r\n  private position: Position;\r\n  private value: number;\r\n  private color: Color;\r\n\r\n  constructor(id: string, position: Position, value: number, color: Color) {\r\n    this.id = id;\r\n    this.position = position;\r\n    this.value = value;\r\n    this.color = color;\r\n  }\r\n\r\n  getPosition(): Position {\r\n    return this.position;\r\n  }\r\n\r\n  setPosition(position: Position) {\r\n    this.position = position;\r\n  }\r\n\r\n  getValue(): number {\r\n    return this.value;\r\n  }\r\n\r\n  setValue(value: number) {\r\n    this.value = value;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getColor(): Color {\r\n    return this.color;\r\n  }\r\n}\r\n","import { Position } from './Position';\r\nimport { Feature } from './Feature';\r\n\r\nexport class ObservationStation {\r\n    private id: string;\r\n    private name: string;\r\n    private description: string;\r\n    private position: Position;\r\n    private availableFeatures: Feature[];\r\n\r\n    constructor(id: string, name: string, description: string, position: Position, availableFeatures: Feature[]) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.position = position;\r\n        this.availableFeatures = availableFeatures;\r\n    }\r\n\r\n    public getId(): string {\r\n        return this.id;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this.description;\r\n    }\r\n\r\n    public getPosition(): Position {\r\n        return this.position;\r\n    }\r\n\r\n    public getFeatures(): Feature[] {\r\n        return this.availableFeatures;\r\n    }\r\n\r\n    public getDiagramms(): void {\r\n\r\n    }\r\n\r\n    public hasFeature(feature: Feature): boolean {\r\n        //Not sure if this works \r\n        var found: boolean = false;\r\n        var length: number = this.availableFeatures.length;\r\n        for (var counter: number = 0; counter < length; counter++) {\r\n            if (feature === this.availableFeatures[counter]) {\r\n                found = true;\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n}","import { ObservationStation } from './ObservationStation';\r\nimport { Feature } from './Feature';\r\n\r\nexport class Observation {\r\n    private observationStation: ObservationStation;\r\n    private feature: Feature;\r\n    private value: number;\r\n    private timestamp: Date;\r\n\r\n    constructor(observationStation: ObservationStation, feature: Feature, value: number, timestamp: Date) {\r\n        this.observationStation = observationStation;\r\n        this.feature = feature;\r\n        this.value = value;\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    public getObservationStation(): ObservationStation {\r\n        return this.observationStation;\r\n    }\r\n\r\n    public getFeature(): Feature {\r\n        return this.feature;\r\n    }\r\n\r\n    public getValue(): number {\r\n        return this.value;\r\n    }\r\n\r\n    public getTimeStamp(): Date {\r\n        return this.timestamp;\r\n    }\r\n}","import { Scale } from \"./Scale\";\r\nimport { Observation } from \"./Observation\";\r\nimport { ObservationStation } from \"./ObservationStation\";\r\nimport Language from \"../Controller/Storage/Language\";\r\nimport Diagram from \"../View/Diagram\";\r\n\r\nexport class Feature {\r\n  private id: string;\r\n  private nameId: string;\r\n  private descriptionId: string;\r\n  private scale: Scale;\r\n  private relatedWeblinkId: string;\r\n  private limit: number;\r\n  private unitOfMeasurement: string;\r\n  private drawableDiagramIds: string[];\r\n\r\n  constructor(\r\n    id: string,\r\n    nameId: string,\r\n    descriptionId: string,\r\n    scale: Scale,\r\n    relatedWeblinkId: string,\r\n    limit: number,\r\n    unitOfMeasurement: string,\r\n    drawableDiagramIds: string[]\r\n  ) {\r\n    this.id = id;\r\n    this.nameId = nameId;\r\n    this.descriptionId = descriptionId;\r\n    this.scale = scale;\r\n    this.relatedWeblinkId = relatedWeblinkId;\r\n    this.limit = limit;\r\n    this.unitOfMeasurement = unitOfMeasurement;\r\n    this.drawableDiagramIds = drawableDiagramIds;\r\n  }\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public getName(): string {\r\n    //return Language.getText(this.nameId);\r\n    return \"\";\r\n  }\r\n\r\n  public getDescription(): string {\r\n    //return Language.getText(this.descriptionId);\r\n    return \"\";\r\n  }\r\n\r\n  public getRelatedScale(): Scale {\r\n    return this.scale;\r\n  }\r\n\r\n  public getRelatedWeblink(): string {\r\n    //return Language.getText(this.relatedWeblinkId);\r\n    return \"\";\r\n  }\r\n\r\n  //Todo: implement Method\r\n  public getDrawableDiagrams(observationStation: ObservationStation): Diagram[] {\r\n    var diagrams: Diagram[] = new Array();\r\n    return diagrams;\r\n  }\r\n\r\n  public getLimit(): number {\r\n    return this.limit;\r\n  }\r\n\r\n  public getUnitOfMeasurement(): string {\r\n    return this.unitOfMeasurement;\r\n  }\r\n\r\n  public isLimitExceeded(observation: Observation): boolean {\r\n    return observation.getValue() > this.limit;\r\n  }\r\n}\r\n","export class Color {\r\n  private r: number;\r\n  private g: number;\r\n  private b: number;\r\n\r\n  constructor(r: number, g: number, b: number) {\r\n    //Creates a color from RGB values\r\n    if (r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255) {\r\n      throw new TypeError(\"r, g, b have to be an integer in [0, 255]\");\r\n    }\r\n    this.r = Math.floor(r);\r\n    this.g = Math.floor(g);\r\n    this.b = Math.floor(b);\r\n  }\r\n\r\n  static getColorFromHex(hex: string): Color {\r\n    var regexp = /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/g;\r\n    var match = regexp.exec(hex);\r\n    if (!match) {\r\n      //Keine Hex-Farbe\r\n      throw new TypeError(\"hex has to be in format #RRGGBB\");\r\n    }\r\n    var r = parseInt(match[1], 16);\r\n    var g = parseInt(match[2], 16);\r\n    var b = parseInt(match[3], 16);\r\n\r\n    return new Color(r, g, b);\r\n  }\r\n\r\n  getRGB(): { r: number; g: number; b: number } {\r\n    var r = this.r;\r\n    var g = this.g;\r\n    var b = this.b;\r\n    return { r: r, g: g, b: b };\r\n  }\r\n\r\n  getHex(): string {\r\n    return \"#\" + this.toHex(this.r) + this.toHex(this.g) + this.toHex(this.b);\r\n  }\r\n\r\n  private toHex(n: number): string {\r\n    if (n < 0 || n > 255) {\r\n      return this.toHex(0); //This should never happen, only for reusing this method later.\r\n    }\r\n    var hex = n.toString(16).toUpperCase(); //Converts to upper-case-hex.\r\n    if (hex.length < 2) {\r\n      hex = \"0\" + hex; //Add padding if n < 16\r\n    }\r\n    return hex;\r\n  }\r\n}\r\n","import { Color } from \"./Color\";\r\n\r\nexport class Scale {\r\n  private linearTransition: boolean;\r\n  private dict: { [key: number]: string };\r\n\r\n  constructor(linearTransition: boolean, colors: { [key: number]: string }) {\r\n    this.linearTransition = linearTransition;\r\n    this.dict = colors;\r\n    this.sortOnKeys();\r\n  }\r\n\r\n  getColor(value: number): Color {\r\n    var keys = Object.keys(this.dict);\r\n    if (keys.length === 0) {\r\n      //Empty Scale\r\n      return Color.getColorFromHex(\"#AAAAAA\");\r\n    }\r\n    for (let index = 0; index < keys.length - 1; index++) {\r\n      if (parseInt(keys[index]) <= value && parseInt(keys[index + 1]) > value) {\r\n        if (this.linearTransition) {\r\n          return this.getLinearTransition(index, value); //Interpolate values of this and next index\r\n        } else {\r\n          return Color.getColorFromHex(\r\n            (this.dict[parseInt(keys[index])] as unknown) as string\r\n          ); //Get Hex-Color directly.\r\n        }\r\n      }\r\n    }\r\n    return Color.getColorFromHex(\r\n      (this.dict[parseInt(keys[keys.length - 1])] as unknown) as string\r\n    ); //If the value is higher than any in the list, return highest value color.\r\n  }\r\n\r\n  private sortOnKeys() {\r\n    //Sorts the dictionary by key value (ascending).\r\n    var keys = Object.keys(this.dict);\r\n    var numKeys: number[] = [];\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      numKeys.push(parseInt(keys[i]));\r\n    }\r\n\r\n    numKeys.sort();\r\n    var tempDict: { [key: number]: string } = {};\r\n    for (let i = 0; i < keys.length; i++) {\r\n      tempDict[numKeys[i]] = this.dict[numKeys[i]];\r\n    }\r\n    this.dict = tempDict;\r\n  }\r\n\r\n  private getLinearTransition(lowerIndex: number, value: number): Color {\r\n    var a = [parseInt(Object.keys(this.dict)[lowerIndex]), \"\"]; // lower value\r\n    a[1] = this.dict[a[0] as number]; //Hex-Color of lower value\r\n    var b = [parseInt(Object.keys(this.dict)[lowerIndex + 1]), \"\"]; //higher value\r\n    b[1] = this.dict[b[0] as number]; //Hex-Color of higher value\r\n    var colorA = Color.getColorFromHex(a[1] as string).getRGB();\r\n    var colorB = Color.getColorFromHex(b[1] as string).getRGB();\r\n\r\n    //Interpolate all RGB values for colors A and B at value\r\n    var resR = this.interpolate(\r\n      [a[0] as number, colorA.r],\r\n      [b[0] as number, colorB.r],\r\n      value\r\n    );\r\n    var resG = this.interpolate(\r\n      [a[0] as number, colorA.g],\r\n      [b[0] as number, colorB.g],\r\n      value\r\n    );\r\n    var resB = this.interpolate(\r\n      [a[0] as number, colorA.b],\r\n      [b[0] as number, colorB.b],\r\n      value\r\n    );\r\n\r\n    return new Color(resR, resG, resB); //Color constructor floors values, decimals are cut off.\r\n  }\r\n\r\n  private interpolate(\r\n    a: [number, number],\r\n    b: [number, number],\r\n    value: number\r\n  ): number {\r\n    var add = b[0] - a[0];\r\n    return (\r\n      a[1] * ((add - value + a[0]) / add) + b[1] * ((add - b[0] + value) / add)\r\n    ); //Interpolate with values a[0] and b[0] and weights a[1] and b[1] at value.\r\n  }\r\n}\r\n","import { MapPin } from \"../Model/MapPin\";\r\nimport { ObservationStation } from \"../Model/ObservationStation\";\r\nimport { Viewport } from \"../Model/Viewport\";\r\nimport { Position } from \"../Model/Position\";\r\nimport { Observation } from \"../Model/Observation\";\r\nimport { Feature } from \"../Model/Feature\";\r\nimport { Scale } from \"../Model/Scale\";\r\nimport { Color } from \"../Model/Color\";\r\nimport { Polygon } from \"../Model/Polygon\";\r\n\r\nexport class MapController {\r\n  selectedFeature: Feature = new Feature(\r\n    \"featureId\",\r\n    \"featureName\",\r\n    \"\",\r\n    new Scale(false, {}),\r\n    \"weblink\",\r\n    20,\r\n    \"°C\",\r\n    []\r\n  );\r\n\r\n  handlePopup(pin: MapPin): Observation {\r\n    var station = new ObservationStation(\r\n      \"id1\",\r\n      \"name1\",\r\n      \"desc1\",\r\n      new Position(49, 8.4),\r\n      []\r\n    );\r\n    return new Observation(\r\n      station,\r\n      this.selectedFeature,\r\n      10,\r\n      new Date(Date.now())\r\n    );\r\n  }\r\n\r\n  handleViewportChange(viewport: Viewport) {}\r\n\r\n  getPins(): MapPin[] {\r\n    return [\r\n      new MapPin(\r\n        \"pin1\",\r\n        new Position(49, 8.5),\r\n        10,\r\n        new Color(\r\n          Math.floor(255 * Math.random()),\r\n          Math.floor(255 * Math.random()),\r\n          Math.floor(255 * Math.random())\r\n        )\r\n      ),\r\n    ];\r\n  }\r\n\r\n  getPolygons(): Polygon[] {\r\n    return [];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Avatar, useTheme, Card, CardContent } from \"@material-ui/core\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\ninterface Props {}\r\n\r\ninterface State {\r\n  open: boolean;\r\n}\r\n\r\nclass FeatureSelect extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { open: false };\r\n  }\r\n  avatarClick() {\r\n    this.setState({ open: !this.state.open });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Avatar\r\n          //@ts-ignore\r\n          className={this.props.classes.root}\r\n          onClick={() => this.avatarClick()}\r\n        >\r\n          <LayersIcon />\r\n        </Avatar>\r\n        {this.state.open ? (\r\n          <Card variant=\"outlined\">\r\n            <CardContent>Test</CardContent>\r\n          </Card>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//@ts-ignore\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(FeatureSelect);\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LocationIcon from \"@material-ui/icons/LocationOn\";\r\nimport Language from \"../../Controller/Storage/Language\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n//@ts-ignore\r\nimport Geonames from \"geonames.js\";\r\nimport { Position } from \"../../Model/Position\";\r\n\r\nconst styles = (theme: Theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nconst geonames = new Geonames({\r\n  username: \"reactairqualityrea\",\r\n  lan: \"de\",\r\n  encoding: \"JSON\",\r\n});\r\n\r\ninterface Props {\r\n  classes: any;\r\n  onSearch(position: Position): void;\r\n}\r\n\r\ninterface State {\r\n  searchTerm: string;\r\n  locationEnabled: boolean;\r\n}\r\n\r\nclass Search extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { searchTerm: \"\", locationEnabled: true };\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.permissions\r\n        .query({ name: \"geolocation\" })\r\n        .then((status: PermissionStatus) => {\r\n          if (status.state === \"denied\") {\r\n            //If permission was denied, disable button\r\n            this.setState({ locationEnabled: false });\r\n          }\r\n        });\r\n    }\r\n  }\r\n  search() {\r\n    var search = this.state.searchTerm;\r\n    // promise\r\n    geonames\r\n      .search({ q: search }) //get continents\r\n      .then((resp: any) => {\r\n        var firstResult = resp.geonames[0];\r\n        var position = new Position(firstResult.lat, firstResult.lng);\r\n        this.props.onSearch(position);\r\n      })\r\n      .catch((err: any) => console.error(err));\r\n  }\r\n\r\n  locationClick() {\r\n    if (\"geolocation\" in navigator) {\r\n      console.log(\"Available\");\r\n      navigator.geolocation.getCurrentPosition(\r\n        (res) => {\r\n          //Get position\r\n          var position = new Position(\r\n            res.coords.latitude,\r\n            res.coords.longitude\r\n          );\r\n          this.props.onSearch(position);\r\n          this.setState({ locationEnabled: true });\r\n        },\r\n        (err) => {\r\n          //Location denied\r\n          console.log(\"Location denied.\");\r\n          this.setState({ locationEnabled: false });\r\n        }\r\n      );\r\n    } else {\r\n      //Browser doesn't support geolocation\r\n      console.log(\"Not Available\");\r\n      this.setState({ locationEnabled: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper className={this.props.classes.root}>\r\n        <TextField\r\n          type=\"search\"\r\n          variant=\"outlined\"\r\n          className={this.props.classes.input}\r\n          label={\"Suche\"}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              this.search(); //Enter key was pressed, search for this.state.searchTerm\r\n            }\r\n          }}\r\n          onChange={(e) => {\r\n            this.setState({ searchTerm: e.target.value });\r\n          }}\r\n          value={this.state.searchTerm}\r\n        />\r\n        <IconButton\r\n          onClick={() => this.search()}\r\n          className={this.props.classes.iconButton}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <Divider\r\n          orientation=\"vertical\"\r\n          className={this.props.classes.divider}\r\n        />\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => this.locationClick()}\r\n          className={this.props.classes.iconButton}\r\n          disabled={!this.state.locationEnabled}\r\n        >\r\n          <LocationIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Search);\r\n","import React from \"react\";\r\nimport { Scale } from \"../../Model/Scale\";\r\nimport { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    box: {\r\n      padding: theme.spacing(1),\r\n      width: \"50px\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  scale: Scale;\r\n  min: number;\r\n  max: number;\r\n}\r\n\r\nfunction getStyleFromScale(scale: Scale, min: number, max: number) {\r\n  var grad = \"linear-gradient(0deg,\";\r\n  for (let index = 0; index < 10; index++) {\r\n    grad =\r\n      grad +\r\n      scale.getColor(min + (max - min) * (index / 10)).getHex() +\r\n      \" \" +\r\n      index * 10 +\r\n      \"%, \";\r\n  }\r\n  grad = grad.slice(0, -2) + \")\";\r\n  return {\r\n    background: grad,\r\n    height: \"80px\",\r\n    width: \"40px\",\r\n  };\r\n}\r\n\r\nfunction Legend(props: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.box} border={1}>\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"body2\">{props.min}</Typography>\r\n        <Box style={getStyleFromScale(props.scale, props.min, props.max)} />\r\n        <Typography variant=\"body2\">{props.max}</Typography>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Legend;\r\n","import React from \"react\";\r\nimport { ObservationStation } from \"../../Model/ObservationStation\";\r\nimport { Map } from \"./Map\";\r\nimport { Feature } from \"../../Model/Feature\";\r\nimport { Viewport } from \"../../Model/Viewport\";\r\nimport { MapController } from \"../../Controller/MapController\";\r\nimport { MapPin } from \"../../Model/MapPin\";\r\nimport { Polygon } from \"../../Model/Polygon\";\r\nimport { Position } from \"../../Model/Position\";\r\nimport { Color } from \"../../Model/Color\";\r\nimport { Observation } from \"../../Model/Observation\";\r\nimport FeatureSelect from \"./FeatureSelect\";\r\nimport Search from \"./Search\";\r\nimport Legend from \"./Legend\";\r\nimport { Scale } from \"../../Model/Scale\";\r\n\r\ninterface State {\r\n  selectedStation: ObservationStation | null;\r\n  lastObservation: Observation | null;\r\n  pins: MapPin[];\r\n  polygons: Polygon[];\r\n}\r\n\r\ninterface Props {}\r\n\r\nexport class MapPage extends React.Component<Props, State> {\r\n  mapController: MapController;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.mapController = new MapController();\r\n    this.state = {\r\n      selectedStation: null,\r\n      lastObservation: null,\r\n      pins: this.mapController.getPins(),\r\n      polygons: this.mapController.getPolygons(),\r\n    };\r\n  }\r\n\r\n  selectObservation(observation: Observation) {\r\n    this.setState({\r\n      selectedStation: observation.getObservationStation(),\r\n      lastObservation: observation,\r\n    });\r\n  }\r\n\r\n  getValueAt(position: Position, feature: Feature): number {\r\n    throw Error(\"Not implemented.\");\r\n  }\r\n\r\n  onViewportChange(viewport: Viewport) {\r\n    this.mapController.handleViewportChange(viewport);\r\n    //Update Page\r\n    this.setState({ selectedStation: this.state.selectedStation });\r\n  }\r\n\r\n  onStationSelected(pin: MapPin) {\r\n    var observation = this.mapController.handlePopup(pin);\r\n    this.selectObservation(observation); // set Observation (and station) for Popup\r\n  }\r\n\r\n  onSearch(pos: Position) {\r\n    //TODO: Implement real functionality\r\n    this.state.pins.push(\r\n      new MapPin(\"Suchergebnis\", pos, 10, new Color(100, 100, 100))\r\n    );\r\n    this.setState({\r\n      pins: this.state.pins,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search onSearch={(pos) => this.onSearch(pos)} />\r\n        <Map\r\n          onViewportChange={(viewport) => {\r\n            this.onViewportChange(viewport);\r\n          }}\r\n          handlePopup={(pin) => this.onStationSelected(pin)}\r\n          pins={this.state.pins}\r\n          polygons={this.state.polygons}\r\n          lastObservation={this.state.lastObservation}\r\n        />\r\n        <FeatureSelect />\r\n        <Legend\r\n          min={0}\r\n          max={15}\r\n          scale={\r\n            new Scale(false, { 0: \"#EEC000\", 5: \"#90B000\", 10: \"#FFFF00\" })\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Fragment } from 'react';\r\n\r\nexport default class ErrorPage extends React.Component<IErrorPageProps, IErrorPageState> {\r\n\r\n    code: number;\r\n    message: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.code = this.props.code;\r\n        this.message = this.props.message;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1>Error</h1>\r\n                <h2>{this.code}</h2>\r\n                <p>{this.message}</p>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IErrorPageProps {\r\n    code: number;\r\n    message: string;\r\n}\r\n\r\ninterface IErrorPageState {\r\n\r\n\r\n}","import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nexport default class DetailPage extends React.Component<IDetailPageProps, IDetailPageState> {\r\n\r\n    observationStationId: string;\r\n\r\n    constructor(props: IDetailPageProps) {\r\n        super(props);\r\n        this.observationStationId = this.props.match.params.id;\r\n    }\r\n\r\n    //Todo: Diese Methode überprüft über den DataProvider, ob eine ObservationStation mit der übergebenen id existiert\r\n    observationStationExists(observationStationId: string): boolean {\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        if (this.observationStationExists(this.observationStationId)) {\r\n            return (\r\n                <Fragment>\r\n                    <h1>Detail Page</h1>\r\n                    <p> von Messstation mit der id: {this.props.match.params.id}</p>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            var errorCode = 404;\r\n            //Todo: error Message sollte über eine string id in verschiedenen Sprachen abgerufen werden können\r\n            var errorMessage = 'There is no observation station with the id: ' + this.observationStationId;\r\n            return (\r\n                <Fragment>\r\n                    <ErrorPage code={errorCode} message={errorMessage} />\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\ninterface IDetailPageProps extends RouteComponentProps<{ id: string }> { }\r\n\r\ninterface IDetailPageState { }","import React from 'react';\r\nimport { Fragment } from 'react'\r\n\r\nexport default class AboutPage extends React.Component<IAboutPageProps, IAboutPageState> {\r\n    constructor(props: IAboutPageProps) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1>AboutPage</h1>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IAboutPageProps { }\r\n\r\ninterface IAboutPageState { }","import React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { render } from '@testing-library/react';\r\n\r\nexport default class PrivacyPolicyPage extends React.Component<IPrivacyPolicyPageProps, IPrivacyPolicyPageState> {\r\n    constructor(props: IPrivacyPolicyPageProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Privacy Policy Page</h1>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IPrivacyPolicyPageProps { }\r\n\r\ninterface IPrivacyPolicyPageState { }","import * as languageData from './languages.json';\r\n\r\ninterface Lang {\r\n    id: string;\r\n    name: string;\r\n    strings: LangString[];\r\n}\r\n\r\ninterface LangString {\r\n    stringId: string;\r\n    text: string;\r\n}\r\n\r\nexport default class Language {\r\n\r\n    private static languageInstance: Language;\r\n\r\n    private selectedLangId: string;\r\n    private languages: Lang[];\r\n    private selectedLang: Lang;\r\n\r\n    constructor() {\r\n        this.selectedLangId = \"de-de\";\r\n        this.languages = languageData.languages;\r\n        this.selectedLang = this.languages[0];\r\n    }\r\n\r\n    public static getInstance(): Language {\r\n        if (this.languageInstance == null) {\r\n            this.languageInstance = new Language();\r\n        }\r\n        return this.languageInstance;\r\n    }\r\n\r\n    public getText(id: string): string {\r\n        let find: LangString | undefined = this.selectedLang.strings.find((e) => e.stringId == id);\r\n        if (find == undefined) {\r\n            return \"undefined\";\r\n        }\r\n        return find.text;\r\n    }\r\n\r\n    public getSelectedLanguage(): string {\r\n        return this.selectedLang.name;\r\n    }\r\n\r\n    public changeLanguage(languageID: string): void {\r\n        let find: Lang | undefined = this.languages.find((e) => e.id == languageID);\r\n        if (find != undefined) {\r\n            this.selectedLang = find;\r\n        }\r\n    }\r\n\r\n    public getAvailabeleLanguages(): Map<string, string> {\r\n        let langs: Map<string, string> = new Map<string, string>();\r\n        this.languages.forEach(element => {\r\n            langs.set(element.id, element.name);\r\n        });\r\n        return langs;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Menu, Button, MenuItem } from '@material-ui/core';\r\nimport { Translate, ExpandMore } from '@material-ui/icons';\r\nimport Language from '../../Controller/Storage/Language';\r\n\r\ninterface IState {\r\n    selectedLang: string;\r\n    anchorEl: Element | null;\r\n}\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nexport default class LanguageMenu extends React.Component<IProps, IState> {\r\n\r\n    private availableLanguages: Map<string, string>;\r\n    private ref: any;\r\n    private language: Language;\r\n\r\n    constructor(props: IProps) {\r\n        super(props)\r\n        this.language = Language.getInstance();\r\n        this.state = {\r\n            selectedLang: this.language.getSelectedLanguage(),\r\n            anchorEl: null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.availableLanguages = this.language.getAvailabeleLanguages();\r\n    }\r\n\r\n    isSelectedLang(lang: string): boolean {\r\n        //return lang === this.state.selectedLang;\r\n        return false;\r\n    }\r\n\r\n    handleClick(event: React.MouseEvent<HTMLButtonElement>): void {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose(): void {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    handleMenuItemClick(event: React.MouseEvent<HTMLElement>, id: string): void {\r\n        this.language.changeLanguage(id);\r\n        this.setState({ anchorEl: null, selectedLang: this.language.getSelectedLanguage() })\r\n    }\r\n\r\n    langList(): JSX.Element[] {\r\n        let list: JSX.Element[] = [];\r\n        this.availableLanguages.forEach((lang: string, id: string) => {\r\n            list.push(\r\n                <MenuItem onClick={(e) => this.handleMenuItemClick(e, id)} selected={false}>\r\n                    {lang}\r\n                </MenuItem>\r\n            )\r\n        });\r\n        return list;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick} color='inherit' startIcon={<Translate />} endIcon={<ExpandMore />} aria-controls=\"simple-menu\" aria-haspopup=\"true\">\r\n                    {this.state.selectedLang}\r\n                </Button>\r\n                <Menu open={Boolean(this.state.anchorEl)} anchorEl={this.state.anchorEl}>\r\n                    {this.langList()}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport LanguageMenu from './LanguageMenu';\r\nimport Language from '../../Controller/Storage/Language';\r\nimport { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IPageMenuProps {\r\n}\r\n\r\ninterface IPageMenuState {\r\n    open: boolean;\r\n}\r\n\r\nexport default class PageMenu extends React.Component<IPageMenuProps, IPageMenuState> {\r\n\r\n    private language: Language;\r\n\r\n    constructor(props: IPageMenuProps) {\r\n        super(props);\r\n        this.language = Language.getInstance()\r\n        this.state = { open: false };\r\n        this.toogleDrawer = this.toogleDrawer.bind(this);\r\n    }\r\n\r\n    private toogleDrawer() {\r\n        const toogle = !this.state.open;\r\n        this.setState({ open: toogle });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" component={Link} to='/pse-airquality-react/' style={{ textDecoration: 'none', color: 'unset' }}>\r\n                            SmartAQnet\r\n                        </Typography>\r\n                        <div style={{ marginLeft: 'auto' }}>\r\n                            <LanguageMenu />\r\n                        </div>\r\n                        <div>\r\n                            <IconButton style={{ float: 'right' }} onClick={this.toogleDrawer}>\r\n                                <MenuIcon style={{ color: 'white' }} />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer anchor=\"right\" open={this.state.open} onClose={this.toogleDrawer}>\r\n                    <div style={{ width: 250 }}>\r\n                        <List>\r\n                            <ListItem button component={Link} to='/pse-airquality-react/about'>\r\n                                <ListItemIcon>\r\n                                    <SecurityIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Privacy Policy\" />\r\n                            </ListItem>\r\n                            <ListItem button component={Link} to='/pse-airquality-react/about'>\r\n                                <ListItemIcon>\r\n                                    <InfoIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={this.language.getText(\"about\")} />\r\n                            </ListItem>\r\n                            <ListItem button component='a' href='https://www.smartaq.net'>\r\n                                <ListItemIcon>\r\n                                    <ExitToAppIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"SmartAQnet\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n            </Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { MapPage } from \"./MapPage/MapPage\";\r\nimport DetailPage from \"./DetailPage\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport PrivacyPolicyPage from \"./PrivacyPolicyPage\";\r\nimport PageMenu from \"./LayoutComponents/PageMenu\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <PageMenu />\r\n        <Switch>\r\n          <Route exact path=\"/pse-airquality-react/\" component={MapPage} />\r\n          <Route\r\n            exact\r\n            path=\"/pse-airquality-react/detail/:id\"\r\n            component={DetailPage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/pse-airquality-react/about\"\r\n            component={AboutPage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/pse-airquality-react/privacy-policy\"\r\n            component={PrivacyPolicyPage}\r\n          />\r\n          {/* If no url pattern matches an error page is shown */}\r\n          <Route>\r\n            {/* Todo: Error message sollte in mehreren Sprachen abrufbar sein */}\r\n            <ErrorPage code={404} message=\"page not found\" />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"typeface-roboto\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MapPage } from \"./View/MapPage/MapPage\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Layout from \"./View/Layout\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[500],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Layout />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}